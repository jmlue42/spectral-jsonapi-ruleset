# This OpenAPI Document provides a way of testing rulesets using Spectrals CLI Command. Covered rulesets include:
#   - `jsonapi-errors-error-object.js`
#   - `jsonapi-document-structure-resource-objects.js`
#   - `jsonapi-document-structure-resource-attributes.js`
#   - `jsonapi-document-structure-resource-identification.js`
#
# Usage (From Repo Root Location):
#   - spectral lint cliTest/passing-rules.yaml --ruleset rules/jsonapi-errors-error-object.js --verbose
#   - spectral lint cliTest/passing-rules.yaml --ruleset rules/jsonapi-document-structure-resource-objects.js --verbose
#   - spectral lint cliTest/passing-rules.yaml --ruleset rules/jsonapi-document-structure-resource-attributes.js --verbose
#   - spectral lint cliTest/passing-rules.yaml --ruleset rules/jsonapi-document-structure-resource-identification.js --verbose
#
# This document will generate `0 errors` as expected for each ruleset ran
openapi: 3.1.0
info:
  title: OpenAPI Management Template
  description: |-
    This API manages information pertaining to users
    which is adhereing to JSON:API v1.0 standards. The goal of this template is
    to provide a universal temaplte for testing all of the JSON:API v1.0
    specifications. This document adheres to the following sections:
      - ContentNegotiation.ClientResponsibilities
      - ContentNegotiation.ServerResponsibilities
      - DocumentStructure
      - DocumentStructure.TopLevel
      - DocumentStructure.ResourceObjects
      - DocumentStructure.ResourceObjects.Attributes
      - DocumentStructure.ResourceObjects.Identification
      - DocumentStructure.Links
      - DocumentStructure.MetaInformation
      - DocumentStructure.MemberNames
      - FetchingData.Sorting
      - FetchingData.Pagination
      - FetchingData.Filtering
      - Errors.ProcessingErrors
      - Errors.ErrorObjects
  version: 1.2.1
servers:
  - url: https://api.template.com/v1
x-jsonapi-object:
  type: object
  properties:
    version:
      type: string
    meta:
      type: object
      additionalProperties: false
  additionalProperties: false
paths:
  /users:
    get:
      tags:
        - users
      summary: List all users
      description: >-
        Retrieve a list of users with pagination and optional filters for
        sorting and searching.
      security: []
      responses:
        '200':
          description: A list of users
          content:
            application/vnd.api+json:
              schema:
                type: object
                description: Response schema for a list of users with pagination details.
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - type
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the user
                        type:
                          type: string
                          description: Type of the resource (users)
                        attributes:
                          type: object
                          required:
                            - name
                            - email
                          properties:
                            name:
                              type: string
                              description: Name of the user
                            email:
                              type: string
                              format: email
                              description: >-
                                Email address of the user, must follow standard
                                email format.
                            role:
                              type: string
                              description: Role of the user in the system
                        relationships:
                          type: object
                          properties:
                            posts:
                              type: object
                              properties:
                                self:
                                  type: string
                                  format: uri
                                related:
                                  type: string
                                  format: uri
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        format: uri
                        nullable: true
                        description: >-
                          The link to the first page of data. Null if not
                          available.
                      last:
                        type: string
                        format: uri
                        nullable: true
                        description: >-
                          The link to the last page of data. Null if not
                          available.
                      prev:
                        type: string
                        format: uri
                        nullable: true
                        description: >-
                          The link to the previous page of data. Null if not
                          available.
                      next:
                        type: string
                        format: uri
                        nullable: true
                        description: >-
                          The link to the next page of data. Null if not
                          available.
              examples:
                userListExample:
                  summary: Example response for user list
                  value:
                    data:
                      - type: users
                        id: '1'
                        attributes:
                          name: John Doe
                          email: john@example.com
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                badRequest:
                  summary: Example of a bad request error
                  value:
                    errors:
                      - id: error-102
                        status: '400'
                        title: Bad Request
                        detail: The request is invalid.
        '500':
          description: Internal Server Error - Indicates a server-side error.
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                internalServerErrorExample:
                  summary: Example of an internal server error response
                  value:
                    errors:
                      - id: error-500
                        status: '500'
                        title: Internal Server Error
                        detail: >-
                          The server encountered an unexpected condition that
                          prevented it from fulfilling the request.
      parameters:
        - name: page[number]
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: page[size]
          in: query
          schema:
            type: integer
            minimum: 1
            default: 20
          description: Number of items per page
        - name: filter
          in: query
          schema:
            type: string
          description: Filter string to narrow down the search
        - name: sort
          in: query
          schema:
            type: string
          description: >-
            Sorting criteria. E.g., `name,-email` for ascending by name and
            descending by email.
        - name: fields
          in: query
          schema:
            type: string
          description: Comma-separated list of fields to include in the response.
    post:
      tags:
        - users
      summary: Create a new user
      requestBody:
        description: Payload to create a new user, containing user details.
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              description: Request schema for creating a new user.
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  properties:
                    type:
                      type: string
                    attributes:
                      type: object
                      required:
                        - name
                        - email
                      properties:
                        name:
                          type: string
                          description: Name of the user
                        email:
                          type: string
                          format: email
                          description: >-
                            Email address of the user, must follow standard
                            email format.
                        role:
                          type: string
                          description: Role of the user in the system
      responses:
        '201':
          description: New user created
          content:
            application/vnd.api+json:
              schema:
                type: object
                description: Response schema for a single user or a newly created user.
                properties:
                  data:
                    type: object
                    required:
                      - id
                      - type
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the user
                      type:
                        type: string
                        description: Type of the resource (users)
                      attributes:
                        type: object
                        required:
                          - name
                          - email
                        properties:
                          name:
                            type: string
                            description: Name of the user
                          email:
                            type: string
                            format: email
                            description: >-
                              Email address of the user, must follow standard
                              email format.
                          role:
                            type: string
                            description: Role of the user in the system
                      relationships:
                        type: object
                        properties:
                          posts:
                            type: object
                            properties:
                              self:
                                type: string
                                format: uri
                              related:
                                type: string
                                format: uri
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          type: object
                          required:
                            - name
                            - email
                          properties:
                            name:
                              type: string
                              description: Name of the user
                            email:
                              type: string
                              format: email
                              description: >-
                                Email address of the user, must follow standard
                                email format.
                            role:
                              type: string
                              description: Role of the user in the system
                  meta:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                        description: Total number of resources available.
                      lastUpdated:
                        type: string
                        format: date-time
                        description: The timestamp of the last update.
        '400':
          description: >-
            Bad Request - Indicates that the server cannot process the request
            due to a client error.
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                badRequest:
                  summary: Example of a bad request error
                  value:
                    errors:
                      - id: error-701
                        status: '400'
                        title: Bad Request
                        detail: >-
                          The request could not be processed due to malformed
                          syntax.
                        links:
                          about: https://api.usermanagement.com/docs/errors/400
        '500':
          description: Internal server error - Indicates a server-side error.
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                badRequest:
                  summary: Example of a bad request error
                  value:
                    errors:
                      - id: error-902
                        status: '500'
                        title: Internal Server Error
                        detail: The server encountered an unexpected condition.
                        links:
                          about: https://api.usermanagement.com/docs/errors/400
  /users/{userId}:
    get:
      tags:
        - users
      summary: Get User by ID
      security: []
      description: Retrieves information for a specific user by their ID.
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: string
      responses:
        '200':
          description: Details of a user
          content:
            application/vnd.api+json:
              schema:
                type: object
                description: Response schema for a single user or a newly created user.
                properties:
                  data:
                    type: object
                    required:
                      - id
                      - type
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the user
                      type:
                        type: string
                        description: Type of the resource (users)
                      attributes:
                        type: object
                        required:
                          - name
                          - email
                        properties:
                          name:
                            type: string
                            description: Name of the user
                          email:
                            type: string
                            format: email
                            description: >-
                              Email address of the user, must follow standard
                              email format.
                          role:
                            type: string
                            description: Role of the user in the system
                      relationships:
                        type: object
                        properties:
                          posts:
                            type: object
                            properties:
                              self:
                                type: string
                                format: uri
                              related:
                                type: string
                                format: uri
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          type: object
                          required:
                            - name
                            - email
                          properties:
                            name:
                              type: string
                              description: Name of the user
                            email:
                              type: string
                              format: email
                              description: >-
                                Email address of the user, must follow standard
                                email format.
                            role:
                              type: string
                              description: Role of the user in the system
                  meta:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                        description: Total number of resources available.
                      lastUpdated:
                        type: string
                        format: date-time
                        description: The timestamp of the last update.
              examples:
                user:
                  summary: User Example
                  value:
                    data:
                      id: '12345'
                      type: user
                      attributes:
                        name: John Doe
                        email: john.doe@example.com
        '404':
          description: User Not Found
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                notFound:
                  summary: Example of a not found error
                  value:
                    errors:
                      id: error-444
                      status: '404'
                      title: Not Found
                      detail: The requested resource was not found.
                      links:
                        about: https://api.usermanagement.com/docs/errors/404
        '500':
          description: Internal Server Error
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                badRequest:
                  summary: Example of a bad request error
                  value:
                    errors:
                      - id: error-032
                        status: '500'
                        title: Internal Server Error
                        detail: The server encountered an unexpected condition.
                        links:
                          about: https://api.usermanagement.com/docs/errors/500
    put:
      tags:
        - users
      summary: Update a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Payload to update an existing user.
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              description: Request schema for updating an existing user's details.
              properties:
                data:
                  type: object
                  required:
                    - id
                    - type
                    - attributes
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    attributes:
                      type: object
                      required:
                        - name
                        - email
                      properties:
                        name:
                          type: string
                          description: Name of the user
                        email:
                          type: string
                          format: email
                          description: >-
                            Email address of the user, must follow standard
                            email format.
                        role:
                          type: string
                          description: Role of the user in the system
      responses:
        '200':
          description: User updated
          content:
            application/vnd.api+json:
              schema:
                type: object
                description: Response schema for a single user or a newly created user.
                properties:
                  data:
                    type: object
                    required:
                      - id
                      - type
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the user
                      type:
                        type: string
                        description: Type of the resource (users)
                      attributes:
                        type: object
                        required:
                          - name
                          - email
                        properties:
                          name:
                            type: string
                            description: Name of the user
                          email:
                            type: string
                            format: email
                            description: >-
                              Email address of the user, must follow standard
                              email format.
                          role:
                            type: string
                            description: Role of the user in the system
                      relationships:
                        type: object
                        properties:
                          posts:
                            type: object
                            properties:
                              self:
                                type: string
                                format: uri
                              related:
                                type: string
                                format: uri
                  included:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        type:
                          type: string
                        attributes:
                          type: object
                          required:
                            - name
                            - email
                          properties:
                            name:
                              type: string
                              description: Name of the user
                            email:
                              type: string
                              format: email
                              description: >-
                                Email address of the user, must follow standard
                                email format.
                            role:
                              type: string
                              description: Role of the user in the system
                  meta:
                    type: object
                    properties:
                      totalCount:
                        type: integer
                        description: Total number of resources available.
                      lastUpdated:
                        type: string
                        format: date-time
                        description: The timestamp of the last update.
        '400':
          description: Bad Request
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                badRequestExample:
                  summary: Example of a Bad Request response
                  value:
                    errors:
                      - status: 400
                        title: Bad Request
                        detail: >-
                          The request payload is invalid. Please check the
                          request data.
        '500':
          description: Internal Server Error
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                badRequest:
                  summary: Example of a bad request error
                  value:
                    errors:
                      - id: error-032
                        status: '500'
                        title: Internal Server Error
                        detail: The server encountered an unexpected condition.
                        links:
                          about: https://api.usermanagement.com/docs/errors/500
    delete:
      tags:
        - users
      summary: Delete a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user was successfully deleted.
        '404':
          description: The specified user was not found.
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                notFoundError:
                  summary: Example of a 404 Not Found error
                  value:
                    errors:
                      - id: error-123
                        status: '404'
                        title: Not Found
                        detail: The user with the specified ID was not found.
                        links:
                          about: https://api.usermanagement.com/docs/errors/404
        '500':
          description: Internal Server Error - Indicates a server-side error.
          content:
            application/vnd.api+json:
              schema:
                type: object
                required:
                  - errors
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        links:
                          type: object
                          properties:
                            about:
                              type: string
                              format: uri
                        status:
                          type: string
                          enum:
                            - '400'
                            - '401'
                            - '403'
                            - '404'
                            - '405'
                            - '406'
                            - '409'
                            - '422'
                            - '500'
                            - '502'
                            - '503'
                          description: >-
                            HTTP status code applicable to this error, given as
                            a string value.
                        code:
                          type: string
                        title:
                          type: string
                        detail:
                          type: string
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                            parameter:
                              type: string
                        meta:
                          type: object
                          additionalProperties: true
              examples:
                internalServerErrorExample:
                  summary: Example of an internal server error response
                  value:
                    errors:
                      - id: error-500
                        status: '500'
                        title: Internal Server Error
                        detail: >-
                          The server encountered an unexpected condition that
                          prevented it from fulfilling the request.
components:
  schemas: {}
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer token authentication
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
      description: API Key based authentication
security:
  - BearerAuth: []
  - ApiKeyAuth: []
