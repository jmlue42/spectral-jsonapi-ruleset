openapi: 3.0.0
info:
  title: Sample JSON:API OAS File
  description: Example file on how a JSON:API compliant API can be described in OAS v3+
  version: 1.0.0
  contact:
    name: Jeff Marquez
    email: some_email@domain.com
    url: http://www.example.com
tags:
  - name: collection
    description: tag description
  - name: single
    description: tag description
servers:
  - url: https://api.domain.com/v1
    description: production
  - url: https://api-sandbox.domain.com/v1
    description: production sandbox
  - url: https://api.{environment}.domain.com/v1
    description: pre-production
    variables:
      environment:
        enum:
          - 'dev'
          - 'qa'
        default: 'dev'
paths:
  /myResources:
    get:
      tags:
        - collection
      summary: Short Description
      description: A longer MEANINGFUL descripition. Do not copy summary.
      security:
        - ApiKeyAuth: []
          AuthCode:
            - 'actions:read'
      parameters:
        - $ref: '#/components/parameters/filter'
      responses:
        '200':
          description: Successful Operation
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MyResourceCollection_Response'
        '401':
          description: 'Unauthorized: Invalid or Expired Authentication'
          headers:
            WWWAuthenticate:
              $ref: '#/components/headers/WWWAuthenticate'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/401Error'
        '403':
          description: 'Forbidden: Request does not have necessary permissions'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/403Error'
        'default':
          description: Error
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    post:
      tags:
        - single
      summary: Create Resource
      description: A longer MEANINGFUL descripition. Do not copy summary.
      security:
        - ApiKeyAuth: []
          AuthCode:
            - 'actions:write'
      requestBody:
        content:
          application/vnd.api+json:
      responses:
        '201':
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MyResourceSingle_Response'
        '401':
          description: 'Unauthorized: Invalid or Expired Authentication'
          headers:
            WWWAuthenticate:
              $ref: '#/components/headers/WWWAuthenticate'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/401Error'
        '403':
          description: 'Forbidden: Request does not have necessary permissions'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/403Error'
        'default':
          description: Error
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DefaultError'
  /myResources/{id}:
    get:
      tags:
        - single
      summary: Short Description
      description: A longer MEANINGFUL descripition. Do not copy summary.
      security:
        - ApiKeyAuth: []
          AuthCode:
            - 'actions:read'
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          description: Successful Operation
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/MyResourceSingle_Response'
        '401':
          description: 'Unauthorized: Invalid or Expired Authentication'
          headers:
            WWWAuthenticate:
              $ref: '#/components/headers/WWWAuthenticate'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/401Error'
        '403':
          description: 'Forbidden: Request does not have necessary permissions'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/403Error'
        'default':
          description: Error
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    patch:
      tags:
        - single
      summary: Short Description
      description: A longer MEANINGFUL descripition. Do not copy summary.
      security:
        - ApiKeyAuth: []
          AuthCode:
            - 'actions:write'
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/vnd.api+json:
      responses:
        '200':
          description: Successful Operation.
        '401':
          description: 'Unauthorized: Invalid or Expired Authentication'
          headers:
            WWWAuthenticate:
              $ref: '#/components/headers/WWWAuthenticate'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/401Error'
        '403':
          description: 'Forbidden: Request does not have necessary permissions'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/403Error'
        'default':
          description: Error
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DefaultError'
    delete:
      tags:
        - single
      summary: Short Description
      description: A longer MEANINGFUL descripition. Do not copy summary.
      security:
        - ApiKeyAuth: []
          AuthCode:
            - 'actions:delete'
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: Successful Operation. No Content.
        '401':
          description: 'Unauthorized: Invalid or Expired Authentication'
          headers:
            WWWAuthenticate:
              $ref: '#/components/headers/WWWAuthenticate'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/401Error'
        '403':
          description: 'Forbidden: Request does not have necessary permissions'
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/403Error'
        'default':
          description: Error
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/DefaultError'
          
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      description: Api Key value. First level of client identification and access control to proxy/gateway
      in: header
      name: api-key
    AuthCode:
            type: oauth2
            flows:
                authorizationCode:
                    authorizationUrl: 'https://api.domain.com/oauth/authorize'
                    tokenUrl: 'https://api.domain.com/oauth/token'
                    refreshUrl: 'https://api.domain.com/oauth/refresh'
                    scopes:
                        'actions:write': modify actions the end-user has access to
                        'actions:read': read actions the end-user has access to
                        'actions:delete': delete actions the end-user has access to
  headers:
    Location:
      description: Location of the resource in question
      schema:
        type: string
        example: http://api.domain.com/v1/{resource-colleciton-name}/{id}
    WWWAuthenticate:
      description: Authentication Challenge Information
      schema:
        type: string
        example: Bearer realm=domain.com
  parameters:
    id:
      name: id
      description: resource reference id
      in: path
      required: true
      schema:
        type: string
        pattern: '^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[afA-F0-9]{4}-[a-fA-F0-9]{12}){1}$'
        example: 4257c52f-6c78-4747-8106-e185c081436b
    filter:
      name: filter
      description: schema for 'filter' query parameter
      in: query
      schema:
        type: object
      style: deepObject
    fields:
      name: fields
      description: schema for 'fields' query parameter
      in: query
      schema:
        type: object
      style: deepObject
  schemas:
    MyResourceSingle_Response:
      allOf:
        - type: object
          required:
            - links
            - data
          properties:
            links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - example: https://api.domain.com/v1/myResources/{id}
            data:
              $ref: '#/components/schemas/MyResourceObject'
    MyResourceCollection_Response:
      allOf:
        - type: object
          required:
            - links
            - data
          properties:
            links:
              type: object
              properties:
                self:
                  allOf:
                    - $ref: '#/components/schemas/Link'
                    - example: https://api.domain.com/v1/myResources
            data:
              type: array
              items:
                $ref: '#/components/schemas/MyResourceObject'
    MyResourceObject:
      allOf:
        - $ref: '#/components/schemas/IdentifierObject'
        - type: object
          required:
            - attributes
            - relationships
          properties:
            type:
              enum:
                - resources
            attributes:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: do-hickey
                description:
                  type: string
                  example: thing that does stuff
            relationships:
              type: object
              properties:
                manufacturer:
                  type: object
                  required:
                    - links
                    - data
                  properties:
                    links:
                      type: object
                      required:
                        - self
                        - related
                      properties:
                        self:
                          allOf:
                            - $ref: '#/components/schemas/Link'
                            - example: http://api.domain.com/v1/myResources/{id}/relationships/manufacturers
                        related:
                          allOf:
                            - $ref: '#/components/schemas/Link'
                            - example: http://api.domain.com/v1/manufacturers/{id}
                    data:
                      allOf:
                        - $ref: '#/components/schemas/RelationshipDataObject'
                        - type: object
                          properties:
                            type:
                              enum:
                                - manufacturers
    
    401Error:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/BaseErrorObject'
              - type: object
                description: 'Unauthorized: Invalid or Expired Authentication'
                properties:
                  status:
                    type: string
                    enum: 
                      - "401"
                  title:
                    type: string
                    enum:
                      - "Unauthorized"
    403Error:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/BaseErrorObject'
              - type: object
                description: 'Forbidden: Request does not have necessary permissions'
                properties:
                  status:
                    type: string
                    enum: 
                      - "403"
                  title:
                    type: string
                    enum:
                      - "Forbidden"
    DefaultError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BaseErrorObject'

    Link:
      type: string
    IdentifierObject:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          pattern: '^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[afA-F0-9]{4}-[a-fA-F0-9]{12}){1}$'
          example: 4257c52f-6c78-4747-8106-e185c081436b
        type:
          type: string
    RelationshipDataObject:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
          pattern: '^([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[afA-F0-9]{4}-[a-fA-F0-9]{12}){1}$'
          example: 2357c52f-6c78-4747-8106-e185c08143aa
        type:
          type: string
    BaseErrorObject:
      type: object
      description: JSON:API Error Object
      properties:
        id:
          type: string
          description: a unique identifier for this particular occurrence of the problem
        links:
          type: object
          description: links that lead to further detail about the particular occurrence of the problem
          properties:
            about:
              oneOf:
                - type: string
                - type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                    meta:
                      type: object
                      additionalProperties: true
        status:
          type: string
          description: the HTTP status code applicable to this problem
        code:
          type: string
          description: an application-specific error code
        title:
          type: string
          description:  a human-readable summary specific of the problem. Usually the http status friendly name.
        detail:
          type: string
          description:  a human-readable explanation specific to this occurrence of the problem
        source:
          type: object
          description: an object containing references to the source of the error
          properties:
            pointer:
              description: a JSON Pointer [RFC6901] to the associated entity in the request document
              oneOf:
                - type: string
                - type: array
                  items:
                    type: string
            parameter:
              description: a string indicating which URI query parameter caused the error
              type: string
        meta:
          type: object
          additionalProperties: true