/// <reference types="node" />
import { Dictionary } from '@stoplight/types';
import { IFunction, JSONSchema } from '../types';
export declare type CJSExport = Partial<{
    exports: object | ESCJSCompatibleExport;
    require: NodeJS.Require;
}>;
export declare type ESCJSCompatibleExport = Partial<{
    default: unknown;
}>;
export declare type ContextExport = Partial<{
    returnExports: unknown;
}>;
export declare const evaluateExport: (body: string, source: string | null, inject?: Dictionary<unknown>) => Function;
export declare type CompileOptions = {
    code: string;
    name: string;
    source: string | null;
    schema: JSONSchema | null;
    inject: Dictionary<unknown>;
};
export declare const compileExportedFunction: ({ code, name, source, schema, inject }: CompileOptions) => IFunction<null>;
export declare function setFunctionContext(context: unknown, fn: Function): any;
