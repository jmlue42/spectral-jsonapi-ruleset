import * as AJV from 'ajv';
import { FileRule, IRulesetFile } from '../types/ruleset';
import { IFunction, IFunctionPaths, IFunctionValues, IRule, JSONSchema } from '../types';
export declare class ValidationError extends AJV.ValidationError {
    errors: AJV.ErrorObject[];
    message: string;
    constructor(errors: AJV.ErrorObject[]);
}
export declare function assertValidRuleset(ruleset: unknown): IRulesetFile;
export declare function isValidRule(rule: FileRule): rule is IRule;
export declare function decorateIFunctionWithSchemaValidation(fn: IFunction<any>, schema: JSONSchema): (data: unknown, opts: unknown, args_0: IFunctionPaths, args_1: IFunctionValues) => void | import("../types").IFunctionResult[] | Promise<void | import("../types").IFunctionResult[]>;
