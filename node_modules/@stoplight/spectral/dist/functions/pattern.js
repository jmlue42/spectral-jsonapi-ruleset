"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pattern = void 0;
const REGEXP_PATTERN = /^\/(.+)\/([a-z]*)$/;
function getFromCache(cache, pattern) {
    const existingPattern = cache.get(pattern);
    if (existingPattern !== void 0) {
        return existingPattern;
    }
    const newPattern = createRegex(pattern);
    cache.set(pattern, newPattern);
    return newPattern;
}
function createRegex(pattern) {
    const splitRegex = REGEXP_PATTERN.exec(pattern);
    if (splitRegex !== null) {
        return new RegExp(splitRegex[1], splitRegex[2]);
    }
    else {
        return new RegExp(pattern);
    }
}
exports.pattern = function (targetVal, opts) {
    if (typeof targetVal !== 'string')
        return;
    let results;
    const { match, notMatch } = opts;
    const cache = this.cache;
    if (match !== void 0) {
        const pattern = getFromCache(cache, match);
        if (!pattern.test(targetVal)) {
            results = [
                {
                    message: `must match the pattern '${match}'`,
                },
            ];
        }
    }
    if (notMatch !== void 0) {
        const pattern = getFromCache(cache, notMatch);
        if (pattern.test(targetVal)) {
            const result = {
                message: `must not match the pattern '${notMatch}'`,
            };
            if (results === void 0) {
                results = [result];
            }
            else {
                results.push(result);
            }
        }
    }
    return results;
};
//# sourceMappingURL=pattern.js.map