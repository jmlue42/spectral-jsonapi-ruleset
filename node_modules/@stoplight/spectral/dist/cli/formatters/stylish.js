"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.stylish = void 0;
const chalk = require("chalk");
const stripAnsi = require("strip-ansi");
const table = require("text-table");
const utils_1 = require("./utils");
const utils_2 = require("../../utils");
function formatRange(range) {
    if (range === void 0)
        return '';
    return ` ${range.start.line + 1}:${range.start.character + 1}`;
}
function getMessageType(severity) {
    const color = utils_1.getColorForSeverity(severity);
    const name = utils_1.getSeverityName(severity);
    return chalk[color](name);
}
exports.stylish = results => {
    let output = '\n';
    const groupedResults = utils_1.groupBySource(results);
    const summaryColor = utils_1.getColorForSeverity(utils_1.getHighestSeverity(results));
    const summaryText = utils_1.getSummary(groupedResults);
    Object.keys(groupedResults).map(path => {
        const pathResults = groupedResults[path];
        output += `${chalk.underline(path)}\n`;
        const pathTableData = pathResults.map((result) => {
            var _a;
            return [
                formatRange(result.range),
                getMessageType(result.severity),
                (_a = result.code) !== null && _a !== void 0 ? _a : '',
                result.message,
                utils_2.printPath(result.path, utils_2.PrintStyle.Dot),
            ];
        });
        output += `${table(pathTableData, {
            align: ['c', 'r', 'l'],
            stringLength(str) {
                return stripAnsi(str).length;
            },
        })
            .split('\n')
            .map((el) => el.replace(/(\d+)\s+(\d+)/u, (m, p1, p2) => chalk.dim(`${p1}:${p2}`)))
            .join('\n')}\n\n`;
    });
    if (summaryText === null) {
        return '';
    }
    output += chalk[summaryColor].bold(`\u2716 ${summaryText}\n`);
    return output;
};
//# sourceMappingURL=stylish.js.map