"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.html = void 0;
const path = require("@stoplight/path");
const eol = require("eol");
const fs = require("fs");
const lodash_1 = require("lodash");
const utils_1 = require("../utils");
const pageTemplate = lodash_1.template(eol.lf(fs.readFileSync(path.join(__dirname, 'html-template-page.html'), 'utf8')));
const messageTemplate = lodash_1.template(eol.lf(fs.readFileSync(path.join(__dirname, 'html-template-message.html'), 'utf8')));
const resultTemplate = lodash_1.template(eol.lf(fs.readFileSync(path.join(__dirname, 'html-template-result.html'), 'utf8')));
function renderMessages(messages, parentIndex) {
    return messages
        .map(message => {
        const line = message.range.start.line + 1;
        const character = message.range.start.character + 1;
        return messageTemplate({
            parentIndex,
            line,
            character,
            severity: utils_1.getSeverityName(message.severity),
            message: message.message,
            code: message.code,
        });
    })
        .join('\n');
}
function renderResults(groupedResults) {
    return Object.keys(groupedResults)
        .map((source, index) => resultTemplate({
        index,
        color: groupedResults[source].length === 0
            ? 'success'
            : utils_1.getSeverityName(utils_1.getHighestSeverity(groupedResults[source])),
        filePath: source,
        summary: utils_1.getSummaryForSource(groupedResults[source]),
    }) + renderMessages(groupedResults[source], index))
        .join('\n');
}
exports.html = results => {
    const color = results.length === 0 ? 'success' : utils_1.getSeverityName(utils_1.getHighestSeverity(results));
    const groupedResults = utils_1.groupBySource(results);
    return pageTemplate({
        date: new Date(),
        color,
        summary: utils_1.getSummary(groupedResults),
        results: renderResults(groupedResults),
    });
};
//# sourceMappingURL=index.js.map