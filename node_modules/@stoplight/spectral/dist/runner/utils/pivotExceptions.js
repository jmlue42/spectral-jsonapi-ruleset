"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pivotExceptions = void 0;
const json_1 = require("@stoplight/json");
const exceptions_1 = require("../../rulesets/mergers/exceptions");
exports.pivotExceptions = (exceptions, runRules) => {
    const dic = {};
    for (const [location, rules] of Object.entries(exceptions)) {
        const pointer = json_1.extractPointerFromRef(location);
        const source = json_1.extractSourceFromRef(location);
        if (pointer === null && source === null) {
            throw new exceptions_1.InvalidUriError(`Malformed exception key (${location}).`);
        }
        for (const rulename of rules) {
            const rule = runRules[rulename];
            if (rule !== void 0) {
                if (!(rulename in dic)) {
                    dic[rulename] = [];
                }
                dic[rulename].push({
                    source,
                    path: pointer === null ? null : json_1.pointerToPath(pointer),
                });
            }
        }
    }
    return dic;
};
//# sourceMappingURL=pivotExceptions.js.map